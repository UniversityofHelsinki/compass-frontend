image: docker:stable

stages:
  - setup
  - build
  - deploy

variables:
  # When you use the dind service, you must instruct Docker to talk with
  # the daemon started inside of the service. The daemon is available
  # with a network connection instead of the default
  # /var/run/docker.sock socket. Docker 19.03 does this automatically
  # by setting the DOCKER_HOST in
  # https://github.com/docker-library/docker/blob/d45051476babc297257df490d22cbd806f1b11e4/19.03/docker-entrypoint.sh#L23-L29
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/services/#accessing-the-services.
  #
  # Specify to Docker where to create the certificates. Docker
  # creates them automatically on boot, and creates
  # `/certs/client` to share between the service and job
  # container, thanks to volume mount from config.toml
  DOCKER_TLS_CERTDIR: "/certs"


services:
  - docker:dind

setup_stage:
  stage: setup
  tags:
    - ohtu-build-4
  image: node:20-alpine
  script:
    - npm ci
    - CI=false npm run build
  artifacts:
    name: compass-build
    paths:
      - build

build_image:
  stage: build
  tags:
    - ohtu-build-4
  script:
    - echo "Logging into quay..."
    - echo $QUAY_PASSWORD | docker login -u $QUAY_USERNAME --password-stdin quay.io
    - echo "Building image..."
    - docker build -t compass-frontend .
    - echo "Tagging main image..."
    - docker tag compass-frontend quay.io/tike/compass-frontend:test
    - echo "Pushing main image..."
    - docker push quay.io/tike/compass-frontend:test

deploy_azure:
  tags:
    - ohtu-build-4
  stage: deploy
  when: manual
  image: mcr.microsoft.com/azure-cli
  before_script:
    - apk update
    - apk add --update gettext git curl
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@version.helsinki.fi/tike-ohtu/compass-configurations.git
  script:
    - az login --service-principal -u $AZURE_USERNAME -p $AZURE_PASSWORD --tenant $AZURE_TENANT_ID
    - az group create --name Self-Reflection-Compass --location northeurope
    - cd compass-configurations
    - envsubst < shibboleth-compass-azure-multi-container.yaml > output.yaml
    - cat output.yaml
    #- envsubst < compass-azure-multi-container.yaml > output.yaml
    # Delete the existing container group (if exists)
    - az container delete --name compass-container-group-test --resource-group Self-Reflection-Compass --yes
    # Create a new container group
    - az container create --resource-group Self-Reflection-Compass --file output.yaml
